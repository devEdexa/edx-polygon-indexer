version: "3"

services:
  postgres:
    build:
      context: .
      dockerfile: ./docker/pg-Dockerfile
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U postgres"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

  subquery-node:
    build:
      context: . # Assuming Dockerfile is in project root
      dockerfile: Dockerfile # Adjust if Dockerfile is named differently
    container_name: subquery_node
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    restart: unless-stopped
    env_file: ".env"
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/project.yaml
      - --db-schema=app
      - --workers=4
      - --batch-size=30
      - --unfinalized-blocks=true
      - --debug

    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://subquery-node:3000/ready"]
    #   interval: 3s
    #   timeout: 5s
    #   retries: 10

  graphql-engine:
    image: subquerynetwork/subql-query:latest
    ports:
      - 3000:3000
    # depends_on:
    #   "postgres":
    #     condition: service_healthy
    #   "subquery-node":
    #     condition: service_healthy
    restart: always
    env_file: ".env"
    command:
      - --name=app
      - --playground
      - --indexer=http://subquery-node:3000
